/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: eugeen (https://sketchfab.com/eugeen)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/viking-watch-tower-5cd42c3ef75748e0b57f25247f073d53
Title: Viking Watch LookoutTower
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import archertower from '../../../assets/archertower.glb'

/**
 * ArcherTower component representing a 3D model of an archer tower.
 * @component
 * @param {Object} props - Props for the component.
 * @param {Object} props.materials - Materials for the tower.
 * @param {Object} props.nodes - Nodes representing different parts of the tower.
 * @param {Object} props.position - Position of the tower.
 * @param {number[]} props.scale - Scale of the tower.
 * @return {JSX.Element} A React JSX Element representing the ArcherTower component.
 */
export default function ArcherTower({props}) {
  const { nodes, materials } = useGLTF(archertower)
  return (
    <group {...props} dispose={null} scale={0.5} position={[0.5,0,0]}>
      <group scale={0.01+props}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.primary_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.secondary_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.another_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.another_beams_2_tower_0.geometry}
          material={materials.tower}
          position={[-2.791, 0, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.platform_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.subplatform_central_beam_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.subplatform_front_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.subplatform_central_side_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.subplatform_side_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.supporting_beams_side_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.supporting_beams_front_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chamber_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chamber_corner_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.chamber_upper_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.chamber_decorative_part_front_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.chamber_decorative_part_side_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.roof_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.central_roof_beam_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.roof_beams_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.horns_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.rail_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ladder_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.decor_decorations_0.geometry}
          material={materials.decorations}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ropes_decorations_0.geometry}
          material={materials.decorations}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.primary_beams002_tower_0.geometry}
          material={materials.tower}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
      </group>
    </group>
  )
}

useGLTF.preload(archertower)
