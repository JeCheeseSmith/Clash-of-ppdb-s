--- Standard Development Schema to load into your (empty) database
--- This deletes your WHOLE CURRENT DATABASE
--- USE WITH CAUTION

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

CREATE TABLE IF NOT EXISTS soldier(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR UNIQUE,
    type VARCHAR,
    health INT,
    damage INT,
    capacity INT,
    consumption INT,
    speed FLOAT4,
    stealth FLOAT4,
    cost INT,
    trainingTime INT
);

CREATE TABLE IF NOT EXISTS package(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    stone BIGINT,
    wood BIGINT,
    steel BIGINT,
    food BIGINT,
    gems BIGINT,
    xp BIGINT
);

CREATE TABLE IF NOT EXISTS player(
    name VARCHAR PRIMARY KEY,
    password VARCHAR NOT NULL,
    avatar VARCHAR,
    gems BIGINT,
    xp BIGINT,
    level INT,
    logout TIMESTAMP -- Last time a player logged out at this time
);

CREATE TABLE IF NOT EXISTS content(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    moment TIMESTAMP NOT NULL,
    content TEXT NOT NULL,
    pname VARCHAR NOT NULL REFERENCES player(name) ON DELETE SET NULL -- Send Relation
);

CREATE TABLE IF NOT EXISTS message(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES content(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS request(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES content(id) ON DELETE CASCADE,
    accept BOOL
);

CREATE TABLE IF NOT EXISTS clanRequest(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES request(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS friendRequest(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES request(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS clan(
    name VARCHAR PRIMARY KEY,
    pname VARCHAR NOT NULL UNIQUE REFERENCES player(name) ON DELETE CASCADE, -- Leader Relation
    status VARCHAR,
    description TEXT
);

CREATE TABLE IF NOT EXISTS settlement(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR UNIQUE NOT NULL,
    mapX INT NOT NULL, -- Coordinate on the map
    mapY INT NOT NULL,
    UNIQUE (mapX,mapY), -- There cannot be settlements with the same coordinates
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE, -- Has Relation: Resources currently in the settlement
    pname VARCHAR NOT NULL REFERENCES player(name) ON DELETE CASCADE -- Owns Relation
);

CREATE TABLE IF NOT EXISTS achievement(
    name VARCHAR PRIMARY KEY,
    task TEXT NOT NULL, -- Description of the tasks to do
    xpBonus INT NOT NULL,
    amount INT NOT NULL -- Preset number of times the task needs to be done
);

CREATE TABLE IF NOT EXISTS transfer(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    discovered BOOL NOT NULL,
    idto INT NOT NULL,
    toType BOOL NOT NULL, -- False: Settlement, True: Transfer
    idfrom INT NOT NULL,
    fromType BOOL NOT NULL, -- False: Settlement, True: Transfer
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE, -- Contains Relation
    pname VARCHAR NOT NULL REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE -- OwnedBy Relation
);

CREATE TABLE IF NOT EXISTS buildable(
    name VARCHAR PRIMARY KEY,
    type VARCHAR NOT NULL,
    function FLOAT4[] NOT NULL, -- The mathematical function to evaluate the resource function with
    upgradeFunction INT[] NOT NULL,
    upgradeResource SMALLINT NOT NULL, -- 2: Wood , 1: Stone, 3: Steel, 4: Food, 12: Stone & Wood
    timeFunction INT[] NOT NULL
);

CREATE TABLE IF NOT EXISTS building(
    id INT GENERATED ALWAYS AS IDENTITY,
    name VARCHAR REFERENCES buildable(name) ON DELETE CASCADE ON UPDATE CASCADE,
    level INT NOT NULL,
    gridX INT NOT NULL, -- Coordinate on the grid
    gridY INT NOT NULL,
    sid INT NOT NULL REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE, -- Contains Relation
    occuppiedCells INT[][] NOT NULL,
    UNIQUE (gridX,gridY,sid),
    PRIMARY KEY (id,name)
);

CREATE TABLE IF NOT EXISTS friend(
    pname1 VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    pname2 VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(pname1,pname2)
);

CREATE TABLE IF NOT EXISTS member(
    pname VARCHAR UNIQUE REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    cname VARCHAR REFERENCES clan(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (pname,cname)
);

CREATE TABLE IF NOT EXISTS retrieved(
    mid INT REFERENCES content(id) ON DELETE CASCADE ON UPDATE CASCADE,
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (mid,pname)
);

CREATE TABLE IF NOT EXISTS shared(
    mid INT REFERENCES content(id) ON DELETE CASCADE ON UPDATE CASCADE,
    cname VARCHAR REFERENCES clan(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (mid,cname)
);

CREATE TABLE IF NOT EXISTS troops(
    pid INT REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE,
    sname VARCHAR REFERENCES soldier(name) ON DELETE CASCADE ON UPDATE CASCADE,
    amount INT NOT NULL,
    discovered BOOL NOT NULL,
    PRIMARY KEY (pid,sname)
);

CREATE TABLE IF NOT EXISTS unlocked(
    name VARCHAR,
    sid INT REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE,
    maxNumber INT,
    PRIMARY KEY (sid,name)
);

CREATE TABLE IF NOT EXISTS wheelofFortune(
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    pid INT REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (pid,pname)
);

CREATE TABLE IF NOT EXISTS achieved(
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    aname VARCHAR REFERENCES achievement(name) ON DELETE CASCADE ON UPDATE CASCADE,
    amount INT, --- Keep track how many times this action has been done; initialised on e.g. 5 and decremented until 0
    PRIMARY KEY (pname,aname)
);

CREATE TABLE IF NOT EXISTS timer(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    oid INT, -- ID Of the Object (can be converted to a numerical value depending on the type
    type TEXT CHECK (type IN ('building', 'soldier', 'transfer', 'attack', 'espionage','outpost')),
    start TIMESTAMP NOT NULL,
    done TIMESTAMP NOT NULL,
    duration BIGINT NOT NULL,
    sid INT NOT NULL REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE -- BelongsTo relation
);

-- Insert standard buildings

INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Castle','storage','{1000,0}','{21600,21600}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('SatelliteCastle','storage','{1000,0}','{21600,21600}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Chancery','government','{0}','{86400,0}','{0,32000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Barracks','government','{0}','{21600,0}','{0,4000,0}',12);

INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('WoodCuttersCamp','production','{200,0}','{600,0}','{400,0}',1);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Quarry','production','{200,0}','{600,0}','{400,0}',2);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('SteelMine','production','{150,0}','{600,0}','{400,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Farm','production','{250,0}','{600,0}','{400,0}',12);

INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('WoodStockPile','storage','{0,1500,0}','{600,0}','{0,2000,0}',1);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('StoneStockPile','storage','{0,1500,0}','{600,0}','{0,2000,0}',2);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Armory','storage','{0,1000,0}','{600,0}','{0,2000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('GrainSilo','storage','{0,2000,0}','{600,0}','{0,2000,0}',12);

INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Stables','defense','{1.1,0}','{21600,0}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('ArcherTower','defense','{1.1,0}','{21600,0}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('LookoutTower','defense','{1.1,0}','{21600,0}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('BlackSmith','defense','{1.1,0}','{21600,0}','{0,4000,0}',12);
INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('Tavern','defense','{1.1,0}','{21600,0}','{0,4000,0}',12);

INSERT INTO buildable(name,type,function,timeFunction,upgradeFunction, upgradeResource) VALUES('empty','decoration','{1.1,0}','{3,0}','{3,0}',12);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('ArmoredFootman','HeavyInfantry',15,10,5,72,1,1,2,10);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Huskarl','HeavyInfantry',25,15,5,108,1,1,4,20);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('OrderKnight','HeavyInfantry',45,25,5,144,1,1,8,40);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Guardsman','Spearmen',12,12,8,72,1.3,1,2,10);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Pikeman','Spearmen',20,20,5,288,3.3,1,4,20);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Halbardier','Spearmen',32,32,8,144,1.3,1,8,40);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Horseman','Cavalry',20,20,7,216,2,0.3,6,20);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Knight','Cavalry',40,40,5,300,2,0.3,10,40);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('WarElephant','Cavalry',45,45,7,350,2,0.3,18,80);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Bowman','Ranged',10,15,10,72,1.4,1,2,10);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('LongbowMan','Ranged',15,25,10,108,1.4,1,4,20);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('CrossbowMan','Ranged',25,45,10,144,1.4,1,8,40);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Bandit','Skirmishers',8,12,20,108,1.2,3,2,10);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Militia','Skirmishers',12,28,20,180,1.2,3,5,20);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth, cost, trainingtime) VALUES('Skirmisher','Skirmishers',20,40,20,216,1.2,3,9,40);

INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Woodcutter', 'Build 3 Woodcutters in 1 settlement',300,3 );
INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Fighter', 'Go to war 5 times',500,5 );
INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Friendly Neighbour', 'Send 7 times resources to an ally',700,7 );
INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Hungry for more', 'Create an outpost',300,3 );
INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Kingdom Rebuilder', 'Create an outpost',500,1 );
INSERT INTO achievement(name, task, xpBonus, amount) VALUES('Travisia''s Uniter', 'Create a clan',500, 1);

INSERT INTO player(name,password) VALUES('admin','1234');
