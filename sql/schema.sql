--- Standard Development Schema to load into your (empty) database
--- This deletes your WHOLE CURRENT DATABASE
--- USE WITH CAUTION

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

CREATE TABLE IF NOT EXISTS soldier(
    name VARCHAR PRIMARY KEY,
    type VARCHAR,
    health INT,
    damage INT,
    capacity INT,
    consumption INT,
    speed FLOAT4,
    stealth FLOAT4
);

CREATE TABLE IF NOT EXISTS package(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    stone BIGINT,
    wood BIGINT,
    steel BIGINT,
    food BIGINT,
    gems BIGINT,
    xp BIGINT
);

CREATE TABLE IF NOT EXISTS player(
    name VARCHAR PRIMARY KEY,
    password VARCHAR NOT NULL,
    avatar VARCHAR,
    gems BIGINT,
    xp BIGINT,
    level INT,
    logout TIMESTAMP -- Last time a player logged out at this time
);

CREATE TABLE IF NOT EXISTS content(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    moment TIMESTAMP NOT NULL,
    content TEXT NOT NULL,
    pname VARCHAR NOT NULL REFERENCES player(name) ON DELETE SET NULL -- Send Relation
);

CREATE TABLE IF NOT EXISTS message(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES content(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS request(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES content(id) ON DELETE CASCADE,
    accept BOOL
);

CREATE TABLE IF NOT EXISTS transferRequest(
    rid INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES request(id) ON DELETE CASCADE,
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS clanRequest(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES request(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS friendRequest(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY REFERENCES request(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS admin(
    name VARCHAR PRIMARY KEY REFERENCES player(name) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS clan(
    name VARCHAR PRIMARY KEY,
    pname VARCHAR NOT NULL UNIQUE REFERENCES player(name) ON DELETE CASCADE, -- Leader Relation
    status VARCHAR,
    description TEXT
);

CREATE TABLE IF NOT EXISTS settlement(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR UNIQUE NOT NULL,
    mapX INT NOT NULL, -- Coordinate on the map
    mapY INT NOT NULL,
    UNIQUE (mapX,mapY), -- There cannot be settlements with the same coordinates
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE, -- Has Relation: Resources currently in the settlement
    pname VARCHAR NOT NULL REFERENCES player(name) ON DELETE CASCADE -- Owns Relation
);

CREATE TABLE IF NOT EXISTS achievement(
    name VARCHAR PRIMARY KEY,
    task TEXT NOT NULL, -- Description of the tasks to do
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE -- Contains Relation
);

CREATE TABLE IF NOT EXISTS quest(
    name VARCHAR PRIMARY KEY REFERENCES achievement(name) ON DELETE CASCADE ON UPDATE CASCADE,
    deadline TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS transfer(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    speed INT,
    sidto INT NOT NULL REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE, -- To Relation
    discovered BOOL NOT NULL,
    sidfrom INT NOT NULL REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE, -- From Relation
    pid INT NOT NULL REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE -- Contains Relation
);

CREATE TABLE IF NOT EXISTS buildable(
    name VARCHAR PRIMARY KEY,
    type VARCHAR NOT NULL,
    function TEXT NOT NULL, -- The mathematical function to evaluate the resource function with
    upgradeFunction TEXT NOT NULL,
    upgradeResource SMALLINT NOT NULL -- 1: Wood , 2: Stone, 3: Steel, 4: Food, 12: Stone & Wood
);

CREATE TABLE IF NOT EXISTS building(
    id INT,
    name VARCHAR REFERENCES buildable(name) ON DELETE CASCADE ON UPDATE CASCADE,
    level INT NOT NULL,
    gridX INT NOT NULL, -- Coordinate on the grid
    gridY INT NOT NULL,
    UNIQUE (gridX,gridY),
    sid INT NOT NULL REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE, -- Contains Relation
    PRIMARY KEY (id,name)
);

CREATE TABLE IF NOT EXISTS friend(
    pname1 VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    pname2 VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(pname1,pname2)
);

CREATE TABLE IF NOT EXISTS member(
    pname VARCHAR UNIQUE REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    cname VARCHAR REFERENCES clan(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (pname,cname)
);

CREATE TABLE IF NOT EXISTS retrieved(
    mid INT REFERENCES content(id) ON DELETE CASCADE ON UPDATE CASCADE,
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (mid,pname)
);

CREATE TABLE IF NOT EXISTS shared(
    mid INT REFERENCES content(id) ON DELETE CASCADE ON UPDATE CASCADE,
    cname VARCHAR REFERENCES clan(name) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (mid,cname)
);

CREATE TABLE IF NOT EXISTS intercept(
    tid1 INT REFERENCES transfer(id) ON DELETE CASCADE ON UPDATE CASCADE,
    tid2 INT REFERENCES transfer(id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(tid1,tid2)
);

CREATE TABLE IF NOT EXISTS troops(
    pid INT REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE,
    sname VARCHAR REFERENCES soldier(name) ON DELETE CASCADE ON UPDATE CASCADE,
    amount INT NOT NULL,
    transferable BOOL NOT NULL,
    discovered BOOL NOT NULL,
    PRIMARY KEY (pid,sname)
);

CREATE TABLE IF NOT EXISTS unlockedBuildable(
    bname VARCHAR REFERENCES buildable(name) ON DELETE CASCADE ON UPDATE CASCADE,
    sid INT REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE,
    level INT,
    maxNumber INT,
    PRIMARY KEY (bname,sid)
);

CREATE TABLE IF NOT EXISTS unlockedsoldier(
    sname VARCHAR REFERENCES soldier(name) ON DELETE CASCADE ON UPDATE CASCADE,
    sid INT REFERENCES settlement(id) ON DELETE CASCADE ON UPDATE CASCADE,
    level INT,
    maxNumber INT,
    PRIMARY KEY (sid,sname)
);

CREATE TABLE IF NOT EXISTS wheelofFortune(
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    pid INT REFERENCES package(id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (pid,pname)
);

CREATE TABLE IF NOT EXISTS achieved(
    pname VARCHAR REFERENCES player(name) ON DELETE CASCADE ON UPDATE CASCADE,
    aname VARCHAR REFERENCES achievement(name) ON DELETE CASCADE ON UPDATE CASCADE,
    moment TIMESTAMP,
    PRIMARY KEY (pname,aname)
);

-- Preset resources
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');

-- Insert Core buildings (Castle, Satellite Castles, Chancery)

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Castle','government','0','10800*2(x-1)',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('SatelliteCastle','government','0','10800*2(x-1)',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Chancery','government','0','10800*2(x-1)',12);

-- Insert standard buildings

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('WoodcuttersCamp','production','200*x','600*x',1);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Quarry','production','200*x','600*x',2);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('SteelMine','production','20+(25*x)','600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Farm','production','300*x','600*x',12);

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('WoodStockPile','storage','2000*2^(x)','600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('StoneStockPile','storage','2000*2^(x)','600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('SteelStockPile','storage','10000*(2*x)','600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('GrainSilo','storage','2000*2^(x)','600*x',12);

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Stables','defense','1,1*x','6*3600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('ArcherTower','defense','1,1*x','6*3600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('LookoutTower','defense','1,1*x','6*3600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('BlackSmith','defense','1,1*x','6*3600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Tavern','defense','1,1*x','6*3600*x',12);

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('TrainingYard','military','1,1*x','6*3600*x',12);
INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('Barracks','military','1,1*x','6*3600*x',12);

INSERT INTO buildable(name,type,function,upgradeFunction,upgradeResource) VALUES('empty','decoration','1,1*x','3*x',12);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('ArmoredFootman','HeavyInfantry',15,10,5,2,1,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Huskarl','HeavyInfantry',25,15,5,3,1,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('OrderKnight','HeavyInfantry',45,25,5,4,1,1);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Guardsman','Spearmen',12,12,8,2,1.3,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Pikeman','Spearmen',20,20,5,8,3.3,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Halbardier','Spearmen',32,32,8,4,1.3,1);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Horseman','Cavalry',20,20,7,6,2,0.3);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Knight','Cavalry',40,40,5,12,2,0.3);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('WarElephant','Cavalry',45,45,7,15,2,0.3);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Bowman','Ranged',10,15,10,2,1.4,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Longbowman','Ranged',15,25,10,3,1.4,1);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Crossbowman','Ranged',25,45,10,4,1.4,1);

INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Bandit','Skirmishers',8,12,20,3,1.2,3);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Militia','Skirmishers',12,28,20,5,1.2,3);
INSERT INTO soldier(name, type, health, damage, capacity, consumption, speed,stealth) VALUES('Skirmisher','Skirmishers',20,40,20,6,1.2,3);


-- Insert Simulation Data

INSERT INTO player(name,password) VALUES('watson','1234');
INSERT INTO player(name,password) VALUES('jonas','1234');
INSERT INTO player(name,password) VALUES('abu','1234');
INSERT INTO player(name,password) VALUES('admin','1234');
INSERT INTO player(name,password) VALUES('raadin','1234');
INSERT INTO player(name,password) VALUES('salah','1234');

INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');
INSERT INTO package(stone,wood,steel,food,gems,xp) VALUES('500','500','500','500','0','0');

INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('watson Castle',0,0,2,'watson');
INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('jonas Castle',2,0,3,'jonas');
INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('abu Castle',0,2,4,'abu');
INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('admin Castle',2,2,5,'admin');
INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('raadin Castle',4,2,6,'raadin');
INSERT INTO settlement(name,mapx,mapy,pid,pname) VALUES('salah Castle',2,4,7,'salah');


-- Create a clan
INSERT INTO clan(name,pname,status,description) VALUES ('Clan of lord Abu', 'abu', 'Building History', 'We are a clan consisting of powerful members. We stand for power!');
INSERT INTO member(pname, cname) VALUES('abu','Clan of lord Abu');

-- Have friends
INSERT INTO friend(pname1, pname2) VALUES ('abu','watson');
INSERT INTO friend(pname1, pname2) VALUES ('admin','watson');
INSERT INTO friend(pname1, pname2) VALUES ('admin','jonas');
INSERT INTO friend(pname1, pname2) VALUES ('admin','abu');
INSERT INTO friend(pname1, pname2) VALUES ('admin','raadin');
INSERT INTO friend(pname1, pname2) VALUES ('admin','salah');

-- Display messages
INSERT INTO content(moment,content,pname) VALUES (now(),'Hi!','watson');
INSERT INTO retrieved(mid, pname) VALUES (1,'abu');
INSERT INTO message(id) VALUES (1);

INSERT INTO content(moment,content,pname) VALUES ( (now()+INTERVAL '1 second'),'Hello there watson!','abu');
INSERT INTO retrieved(mid, pname) VALUES (2,'watson');
INSERT INTO message(id) VALUES (2);

-- Show a clan request
INSERT INTO content(moment,content,pname) VALUES (now(),'May I join your clan??','salah');
INSERT INTO retrieved(mid, pname) VALUES (3,'abu');
INSERT INTO request(id,accept) VALUES (3,NULL);
INSERT INTO clanrequest(id) VALUES (3);

-- Show a friend request
INSERT INTO content(moment,content,pname) VALUES (now(),'Wanna be my friend buddy?','jonas');
INSERT INTO retrieved(mid, pname) VALUES (4,'abu');
INSERT INTO request(id,accept) VALUES (4,NULL);
INSERT INTO friendRequest(id) VALUES (4);

-- Create extra clanrequests who should get deleted too when one is accepted
INSERT INTO content(moment,content,pname) VALUES (now(),'May I join your clan??','salah');
INSERT INTO retrieved(mid, pname) VALUES (5,'abu');
INSERT INTO request(id,accept) VALUES (5,NULL);
INSERT INTO clanrequest(id) VALUES (5);


